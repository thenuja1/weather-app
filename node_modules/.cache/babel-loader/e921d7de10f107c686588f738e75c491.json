{"ast":null,"code":"var _jsxFileName = \"/Users/thenuja/weather-app/src/components/forecast/Forecast.js\";\nimport React, { useState } from 'react';\nimport Conditions from '../conditions/Conditions';\nimport classes from './Forecast.module.css';\n\nconst Forecast = () => {\n  let [city, setCity] = useState('');\n  let [unit, setUnit] = useState('imperial');\n  let [responseObj, setResponseObj] = useState({});\n  const uriEncodedCity = encodeURIComponent(city);\n\n  function getForecast(e) {\n    e.preventDefault();\n    fetch(`https://community-open-weather-map.p.rapidapi.com/weather?units=${unit}&q=${uriEncodedCity}`, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"8c2c2fef07msh10d93721ff32400p16cad6jsn381f169eb509\"\n      }\n    }).then(response => response.json()).then(response => {\n      setResponseObj(response);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Find Current Weather Conditions\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: getForecast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter City\",\n    maxLength: \"50\",\n    value: city,\n    onChange: e => setCity(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"units\",\n    checked: unit === \"imperial\",\n    value: \"imperial\",\n    onChange: e => setUnit(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }), \"Fahrenheit\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"units\",\n    checked: unit === \"metric\",\n    value: \"metric\",\n    onChange: e => setUnit(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }), \"Celcius\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Get Forecast\")));\n};\n\nexport default Forecast;","map":{"version":3,"sources":["/Users/thenuja/weather-app/src/components/forecast/Forecast.js"],"names":["React","useState","Conditions","classes","Forecast","city","setCity","unit","setUnit","responseObj","setResponseObj","uriEncodedCity","encodeURIComponent","getForecast","e","preventDefault","fetch","then","response","json","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AACnB,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAI,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,UAAD,CAA9B;AACA,MAAI,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMU,cAAc,GAAGC,kBAAkB,CAACP,IAAD,CAAzC;;AAEA,WAASQ,WAAT,CAAqBC,CAArB,EAAwB;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,KAAK,CAAE,mEAAkET,IAAK,MAAKI,cAAe,EAA7F,EAAgG;AACjG,gBAAU,KADuF;AAEjG,iBAAW;AACP,2BAAmB,2CADZ;AAEP,0BAAkB;AAFX;AAFsF,KAAhG,CAAL,CAQAM,IARA,CAQKC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARjB,EASAF,IATA,CASKC,QAAQ,IAAI;AACdR,MAAAA,cAAc,CAACQ,QAAD,CAAd;AACH,KAXA;AAYH;;AAEF,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,eAEI;AAAM,IAAA,QAAQ,EAAEL,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,YAFhB;AAGI,IAAA,SAAS,EAAC,IAHd;AAII,IAAA,KAAK,EAAER,IAJX;AAKI,IAAA,QAAQ,EAAGS,CAAD,IAAOR,OAAO,CAACQ,CAAC,CAACM,MAAF,CAASC,KAAV,CAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,eAQQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,OAAO,EAAEd,IAAI,KAAK,UAHtB;AAII,IAAA,KAAK,EAAC,UAJV;AAKI,IAAA,QAAQ,EAAGO,CAAD,IAAON,OAAO,CAACM,CAAC,CAACM,MAAF,CAASC,KAAV,CAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eARR,eAkBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,OAAO,EAAEd,IAAI,KAAK,QAHtB;AAII,IAAA,KAAK,EAAC,QAJV;AAKI,IAAA,QAAQ,EAAGO,CAAD,IAAON,OAAO,CAACM,CAAC,CAACM,MAAF,CAASC,KAAV,CAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,YAlBR,eA4BQ;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA5BR,CAFJ,CADD;AAmCF,CAzDD;;AA2DA,eAAejB,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport Conditions from '../conditions/Conditions'\nimport classes from './Forecast.module.css';\n\n\nconst Forecast = () => {\n    let [city, setCity] = useState('')\n    let [unit, setUnit] = useState('imperial')\n    let [responseObj, setResponseObj] = useState({})\n    const uriEncodedCity = encodeURIComponent(city)\n    \n    function getForecast(e) {\n        e.preventDefault()\n        fetch(`https://community-open-weather-map.p.rapidapi.com/weather?units=${unit}&q=${uriEncodedCity}`, {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"8c2c2fef07msh10d93721ff32400p16cad6jsn381f169eb509\"\n            }\n        })\n\n       .then(response => response.json())\n       .then(response => {\n           setResponseObj(response)\n       })\n    }\n\n   return (\n    <div>\n        <h2>Find Current Weather Conditions</h2>\n        <form onSubmit={getForecast}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter City\"\n                    maxLength=\"50\"\n                    value={city}\n                    onChange={(e) => setCity(e.target.value)}\n                    />\n                <label>\n                    <input\n                        type=\"radio\"\n                        name=\"units\"\n                        checked={unit === \"imperial\"}\n                        value=\"imperial\"\n                        onChange={(e) => setUnit(e.target.value)}\n                        />\n                    Fahrenheit\n                </label>\n                <label>\n                    <input\n                        type=\"radio\"\n                        name=\"units\"\n                        checked={unit === \"metric\"}\n                        value=\"metric\"\n                        onChange={(e) => setUnit(e.target.value)}\n                        />\n                    Celcius\n                </label>\n                <button type=\"submit\">Get Forecast</button>\n            </form>\n    </div>\n   )\n}\n\nexport default Forecast;"]},"metadata":{},"sourceType":"module"}