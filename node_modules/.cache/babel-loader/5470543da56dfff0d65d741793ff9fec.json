{"ast":null,"code":"var _jsxFileName = \"/Users/thenuja/weather-app/src/components/forecast/Forecast.js\";\nimport React, { useState } from 'react';\nimport Conditions from '../conditions/Conditions';\n\nconst Forecast = () => {\n  let [city, setCity] = useState('');\n  let [unit, setUnit] = useState('imperial');\n  let [responseObj, setResponseObj] = useState({});\n\n  function getForecast() {\n    fetch(\"https://community-open-weather-map.p.rapidapi.com/weather?callback=test&id=2172797&units=%2522metric%2522%20or%20%2522imperial%2522&mode=xml%252C%20html&q=Oslo%252C%20Norway\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"8c2c2fef07msh10d93721ff32400p16cad6jsn381f169eb509\"\n      }\n    }).then(response => response.json()).then(response => {\n      setResponseObj(response);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Find Current Weather Conditions\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getForecast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Get Forecast\"), /*#__PURE__*/React.createElement(Conditions, {\n    responseObj: responseObj,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Forecast;","map":{"version":3,"sources":["/Users/thenuja/weather-app/src/components/forecast/Forecast.js"],"names":["React","useState","Conditions","Forecast","city","setCity","unit","setUnit","responseObj","setResponseObj","getForecast","fetch","then","response","json"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAI,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,UAAD,CAA9B;AACA,MAAI,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA5C;;AAEA,WAASS,WAAT,GAAuB;AACnBC,IAAAA,KAAK,CAAC,+KAAD,EAAkL;AACnL,gBAAU,KADyK;AAEnL,iBAAW;AACP,2BAAmB,2CADZ;AAEP,0BAAkB;AAFX;AAFwK,KAAlL,CAAL,CAQAC,IARA,CAQKC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARjB,EASAF,IATA,CASKC,QAAQ,IAAI;AACdJ,MAAAA,cAAc,CAACI,QAAD,CAAd;AACH,KAXA;AAYH;;AAEF,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,eAEI;AAAQ,IAAA,OAAO,EAAEH,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,oBAAC,UAAD;AACI,IAAA,WAAW,EAAEF,WADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADD;AASF,CA7BD;;AA+BA,eAAeL,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport Conditions from '../conditions/Conditions'\n\nconst Forecast = () => {\n    let [city, setCity] = useState('');\n    let [unit, setUnit] = useState('imperial');\n    let [responseObj, setResponseObj] = useState({})\n    \n    function getForecast() {\n        fetch(\"https://community-open-weather-map.p.rapidapi.com/weather?callback=test&id=2172797&units=%2522metric%2522%20or%20%2522imperial%2522&mode=xml%252C%20html&q=Oslo%252C%20Norway\", {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"8c2c2fef07msh10d93721ff32400p16cad6jsn381f169eb509\"\n            }\n        })\n\n       .then(response => response.json())\n       .then(response => {\n           setResponseObj(response)\n       })\n    }\n\n   return (\n    <div>\n        <h2>Find Current Weather Conditions</h2>\n        <button onClick={getForecast}>Get Forecast</button>\n        <Conditions\n            responseObj={responseObj}\n        />\n    </div>\n   )\n}\n\nexport default Forecast;"]},"metadata":{},"sourceType":"module"}