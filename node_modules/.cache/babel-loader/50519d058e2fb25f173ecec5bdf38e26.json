{"ast":null,"code":"var _jsxFileName = \"/Users/thenuja/weather-app/src/components/forecast/Forecast.js\";\nimport React, { useState } from 'react';\nimport Conditions from '../conditions/Conditions';\n\nconst Forecast = () => {\n  let [responseObj, setResponseObj] = useState({});\n\n  function getForecast() {\n    fetch('https://community-open-weather-map.p.rapidapi.com/weather?callback=test&id=2172797&units=%2522metric%2522%20or%20%2522imperial%2522&mode=xml%252C%20html&q=Oslo%252C%20Norway').then(response => response.json()).then(response => {\n      setResponseObj(response);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, \"Find Current Weather Conditions\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }\n  }, \"Find Current Weather Conditions\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getForecast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }\n  }, \"Get Forecast\"), /*#__PURE__*/React.createElement(Conditions, {\n    responseObj: responseObj,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getForecast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, \"Get Forecast\"));\n};\n\nexport default Forecast;","map":{"version":3,"sources":["/Users/thenuja/weather-app/src/components/forecast/Forecast.js"],"names":["React","useState","Conditions","Forecast","responseObj","setResponseObj","getForecast","fetch","then","response","json"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,MAAI,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA5C;;AAEA,WAASK,WAAT,GAAuB;AACpBC,IAAAA,KAAK,CAAC,+KAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMC,QAAQ,IAAI;AACdJ,MAAAA,cAAc,CAACI,QAAD,CAAd;AACH,KAJD;AAKF;;AAEF,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADH,eAEG;AAAQ,IAAA,OAAO,EAAEH,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFH,eAGG,oBAAC,UAAD;AACI,IAAA,WAAW,EAAEF,WADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,CAFJ,eASA;AAAQ,IAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATA,CADD;AAaF,CAxBD;;AAyBA,eAAeH,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport Conditions from '../conditions/Conditions'\n\nconst Forecast = () => {\n    let [responseObj, setResponseObj] = useState({})\n    \n    function getForecast() {\n       fetch('https://community-open-weather-map.p.rapidapi.com/weather?callback=test&id=2172797&units=%2522metric%2522%20or%20%2522imperial%2522&mode=xml%252C%20html&q=Oslo%252C%20Norway')\n       .then(response => response.json())\n       .then(response => {\n           setResponseObj(response)\n       })\n    }\n\n   return (\n    <div>\n        <h2>Find Current Weather Conditions</h2>\n        <div>\n           <h2>Find Current Weather Conditions</h2>\n           <button onClick={getForecast}>Get Forecast</button>\n           <Conditions\n               responseObj={responseObj}\n               />\n       </div>\n    <button onClick={getForecast}>Get Forecast</button>\n</div>\n   )\n}\nexport default Forecast;"]},"metadata":{},"sourceType":"module"}